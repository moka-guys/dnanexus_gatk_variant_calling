{
  "name": "gatk3_human_exome_pipeline",
  "title": "GATK3 Human Exome Pipeline",
  "summary": "v1.3 - (Requires a user-provided GATK 3.x jar file). Implements the GATK 3.x best practices pipeline for human exomes, including deduplicating, realigning and recalibrating mappings, and calling variants.",
    "properties": {
    "github release": "v1.3"
  },
  "dxapi": "1.0.0",
  "openSource": true,
  "version": "1.0.5",
  "inputSpec": [
    {
      "name": "gatk_jar_file",
      "label": "GATK jar file",
      "help": "The GenomeAnalysisTK.jar file",
      "class": "file",
      "patterns": ["GenomeAnalysisTK*.jar"],
      "optional": false
    },
    {
      "name": "sorted_bam",
      "label": "Sorted mappings",
      "help": "A coordinate-sorted BAM file with the human mappings to be processed through the pipeline.",
      "class": "file",
      "patterns": ["*.bam"]
    },
     {
      "name": "vendor_exome_bedfile",
      "label": "Vendor exome bedfile",
      "help": "Select the bed file which will be used to filter by haplotype caller. If a custom panel this input will not be downloaded.",
      "class": "file",
      "optional": true,
      "patterns": ["*.bed"]
    },
     {
      "name": "padding",
      "label": "Extra padding to add to targets",
      "help": "The amount of padding, in number of bases, to add to each target interval. This is typically used to add padding around exons when analyzing exomes. The general Broad exome calling pipeline uses 100 bp padding by default. This will supply the '-ip' command-line option to GATK HaplotypeCaller. This option is ignored if no vendor exome is selected. Enter 0 to disable padding.",
      "class": "int",
      "default": 100,
      "group": "Common"
    },
    {
      "name": "output_format",
      "label": "Output format",
      "help": "Choose 'vcf' to output a regular (genotyped) VCF file. Choose 'gvcf' to output an intermediate gVCF file which can be later genotyped. Choose 'both' to output both types of files. For more information on the gVCF file format, see http://gatkforums.broadinstitute.org/discussion/4017/what-is-a-gvcf-and-how-is-it-different-from-a-regular-vcf.",
      "class": "string",
      "default": "vcf",
      "choices": [
        "vcf",
        "gvcf",
        "both"
      ],
      "group": "Common"
    },
    {
      "name": "skip_markduplicates",
      "label": "Skip the duplicate marking step?",
      "help": "If selected, the duplicate marking step will be skipped. This is appropriate if the input BAM file contains already-marked duplicates by some other method, or if the protocol requires skipping this step (typical for HaloPlex).",
      "class": "boolean",
      "optional": true,
      "group": "Common"
    },
    {
      "name": "extra_md_options",
      "label": "Extra command line options (for Picard MarkDuplicates)",
      "help": "Extra command line options that will be supplied directly to the Picard MarkDuplicates execution. Example: REMOVE_DUPLICATES=true",
      "class": "string",
      "optional": true,
      "group": "Advanced"
    },
    {
      "name": "extra_rtc_options",
      "label": "Extra command line options (for RealignerTargetCreator)",
      "help": "Extra command line options that will be supplied directly to the GATK RealignerTargetCreator execution. Example: -minReads 6",
      "class": "string",
      "optional": true,
      "group": "Advanced"
    },
    {
      "name": "extra_ir_options",
      "label": "Extra command line options (for IndelRealigner)",
      "help": "Extra command line options that will be supplied directly to the GATK IndelRealigner execution. Example: -LOD 0.4",
      "class": "string",
      "optional": true,
      "group": "Advanced"
    },
    {
      "name": "extra_br_options",
      "label": "Extra command line options (for BaseRecalibrator)",
      "help": "Extra command line options that will be supplied directly to the GATK BaseRecalibrator execution. Example: -maxCycle 100",
      "class": "string",
      "optional": true,
      "group": "Advanced"
    },
    {
      "name": "extra_pr_options",
      "label": "Extra command line options (for PrintReads)",
      "help": "Extra command line options that will be supplied directly to the GATK PrintReads execution. Example: --downsample_coverage 500",
      "class": "string",
      "optional": true,
      "group": "Advanced"
    },
    {
      "name": "extra_hc_options",
      "label": "Extra command line options (for HaplotypeCaller)",
      "help": "Extra command line options that will be supplied directly to the GATK HaplotypeCaller execution. Example: -stand_call_conf 20",
      "class": "string",
      "optional": true,
      "group": "Advanced"
    },
    {
      "name": "extra_gg_options",
      "label": "Extra command line options (for GenotypeGVCFs)",
      "help": "Extra command line options that will be supplied directly to the GATK GenotypeGVCFs execution. Example: -maxAltAlleles 10",
      "class": "string",
      "optional": true,
      "group": "Advanced"
    }
  ],
  "outputSpec": [
    {
      "name": "bam",
      "label": "Refined mappings (BAM)",
      "help": "A coordinate-sorted BAM file with the refined mappings.",
      "class": "file",
      "patterns": ["*.bam"]
    },
        {
      "name": "outputmetrics",
      "label": "Mark Duplicates Output Metrics",
      "help": "The outputmetrics  files from picard mark duplicates.",
      "class": "file"
    },
    {
      "name": "bai",
      "label": "Refined mappings index",
      "help": "The associated BAM index file.",
      "class": "file",
      "patterns": ["*.bai"]
    },
    {
      "name": "vcf",
      "label": "Variants (VCF)",
      "help": "A gzipped VCF file with the called variants.",
      "class": "file",
      "patterns": ["*.vcf.gz"],
      "optional": true
    },
    {
      "name": "vcf_tbi",
      "label": "Variants (VCF) index",
      "help": "A tabix index (TBI) file with the associated variants index.",
      "class": "file",
      "patterns": ["*.vcf.gz.tbi"],
      "optional": true
    },
    {
      "name": "gvcf",
      "label": "Variants (gVCF)",
      "help": "A gzipped gVCF file with the called variants.",
      "class": "file",
      "patterns": ["*.g.vcf.gz"],
      "optional": true
    },
    {
      "name": "gvcf_tbi",
      "label": "Variants (gVCF) index",
      "help": "A tabix index (TBI) file with the associated variants index.",
      "class": "file",
      "patterns": ["*.g.vcf.gz.tbi"],
      "optional": true
    }
  ],
  "runSpec": {
    "execDepends": [
      {
        "name": "openjdk-7-jre-headless"
      },
      {
        "name": "openjdk-8-jre-headless"
      }
    ],
    "systemRequirements": {
      "main": {
        "instanceType": "mem1_ssd1_x8"
      }
    },
    "distribution" : "Ubuntu",
    "release" : "14.04",
    "file": "src/code.sh",
    "interpreter": "bash"
  },
  "description": "# GATK3 Human Exome Pipeline\n\n**Please read this important information before running the app.**\n\n## What does this app do?\n\nThis app implements the GATK 3.x best practices pipeline for a human exome. It receives human mappings as input, and refines them\n(by deduplicating, realigning, and recalibrating them); subsequently, it calls variants using the GATK HaplotypeCaller. It\noutputs the refined mappings as well as the called variants. NOTE: This app does not perform variant recalibration.\n\n## What are typical use cases for this app?\n\nUse this app when you have mapped exome reads to the human genome, and want to identify variants (SNPs and indels) using\nthe GATK 3.x best practices method.\n\nIf you have multiple samples, use this app for each sample, and choose the option to generate a gVCF file. Subsequently,\nfeed all the gVCFs to GATK GenotypeGVCFs in order to generate a multi-sample genotyped VCF.\n\n## What data are required for this app to run?\n\nThis app is only a wrapper for the GATK 3.x software, and requires that you appropriately license and obtain that software yourself.\nAfter licensing GATK, you should have received a file with the `GenomeAnalysisTK` prefix and the `.jar` suffix, such as `GenomeAnalysisTK.jar`\nor `GenomeAnalysisTK-3.4-0.jar`. Place that file anywhere inside the project where this app will run. The app will search your\nproject for a file matching the pattern `GenomeAnalysisTK*.jar` and use it.\n\nThis app requires a coordinate-sorted BAM file (`*.bam`) with human mappings. No other file inputs are required; the app automatically\ndetects the reference genome (hg19, GRCh37/b37, or GRCh37+decoy/hs37d5) based on the BAM file header, and uses the appropriate GATK\nresources (dbSNP and known indels). If your input mappings happen to be deduplicated already, you can skip the duplication marking step by\nchoosing the relevant option in the app configuration. You may also want to skip deduplication for certain amplicon protocols (such\nas HaloPlex) that always generate reads starting at specific locations (and which would otherwise be marked as duplicate).\n\nYou can optionally choose a vendor exome kit from the following supported kits. **IMPORTANT**: Doing so has no effect on the\nmappings refinement; deduplication, realignment and recalibration will be performed on the whole input. However, choosing\nan exome will limit variation calling to within the kit coordinates (targets) only. By default, a 100bp padding will be\nadded around each target, and that can be changed in the app configuration. By constraining variation calling to within\nthe target coordinates (plus whatever padding), you can decrease the time the app requires to run, and often reduce false\npositives (which tend to appear in low coverage regions, outside of target coordinates). Choice of a vendor exome kit is\noptional, and if not provided, variation calling will be performed across the whole genome.\n\n| Identifier | Marketing Name |\n| --- | --- |\n| agilent_sureselect_human_all_exon_50mb | Agilent SureSelect Human All Exon 50Mb |\n| agilent_sureselect_human_all_exon_v1 | Agilent SureSelect Human All Exon V1 |\n| agilent_sureselect_human_all_exon_v2 | Agilent SureSelect Human All Exon V2 |\n| agilent_sureselect_human_all_exon_v4 | Agilent SureSelect Human All Exon V4 |\n| agilent_sureselect_human_all_exon_v4_plus_utrs | Agilent SureSelect Human All Exon V4+UTRs |\n| agilent_sureselect_human_all_exon_v5 | Agilent SureSelect Human All Exon V5 |\n| agilent_sureselect_human_all_exon_v5_plus_utrs | Agilent SureSelect Human All Exon V5+UTRs |\n| agilent_sureselect_human_all_exon_v6 | Agilent SureSelect Human All Exon V6 |\n| agilent_sureselect_human_kinome_v1 | Agilent SureSelect Human Kinome V1 |\n| haloplex_arrhythmia_ilm | HaloPlex Arrhythmia ILM |\n| haloplex_cancer_research_panel_ilm | HaloPlex Cancer Research Panel ILM |\n| haloplex_cardiomyopathy_ilm | HaloPlex Cardiomyopathy ILM |\n| haloplex_chromosome_x_ilm | HaloPlex Chromosome-X ILM |\n| haloplex_connective_tissue_disorder_ilm | HaloPlex Connective Tissue Disorder ILM |\n| haloplex_exome | HaloPlex Exome |\n| haloplex_iccg_ilm | HaloPlex ICCG ILM |\n| haloplex_noonan_syndrome_ilm | HaloPlex Noonan Syndrome ILM |\n| illumina_nextera_exome | Illumina Nextera Exome Enrichment Kit |\n| illumina_nextera_rapid_capture_exome | Illumina Nextera Rapid Capture Exome |\n| illumina_nextera_rapid_capture_expanded_exome | Illumina Nextera Rapid Capture Expanded Exome |\n| illumina_truseq_exome | Illumina TruSeq Exome Enrichment Kit |\n| nimblegen_seqcap_ez_50mb_human_utr_design | NimbleGen SeqCap EZ Designs: 50Mb Human UTR Design |\n| nimblegen_seqcap_ez_comprehensive_cancer_design | NimbleGen SeqCap EZ Designs: Comprehensive Cancer Design |\n| nimblegen_seqcap_ez_exome_utr | NimbleGen SeqCap EZ Exome +UTR |\n| nimblegen_seqcap_ez_exome_v2 | NimbleGen SeqCap EZ Exome v2.0 |\n| nimblegen_seqcap_ez_exome_v3 | NimbleGen SeqCap EZ Exome v3.0 |\n| nimblegen_seqcap_ez_neurology_panel_design | NimbleGen SeqCap EZ Designs: Neurology Panel Design |\n| vcrome_v2.1 | SeqCap EZ HGSC VCRome |\n\n* * *\n\nIf you would like to see some other kit included in this list, do not hesitate to contact us at support@dnanexus.com.\n\n## What does this app output?\n\nThis app outputs the refined (deduplicated, realigned, and recalibrated) mappings in BAM format (`*.bam`), as well\nas the associated BAM index (`*.bai`).\n\nThe app also outputs a _genotyped_ VCF file (`*.vcf.gz`) and its associated tabix index (`*.vcf.gz.tbi`), or an\nintermediate gVCF file (`*.g.vcf.gz`) and its associated tabix index (`*.g.vcf.gz.tbi`), or all of the above. This\nbehavior depends on the \"Output format\" option. The option works as follows:\n\n* When set to `vcf`, the app runs GATK HaplotypeCaller in regular (_genotyped_ VCF) mode; this calls variants\nand outputs only the locations of variation.\n* When set to `gvcf`, the app runs GATK HaplotypeCaller in gVCF mode; this outputs information for all locations,\nincluding sections which lack variation. The gVCF is an intermediate file that can be later used as input to\nGATK GenotypeGVCFs, which can take multiple gVCF files (from multiple samples) and genotype them, creating a\ncohort-level genotyped VCF. For more information, consult [this GATK article](http://gatkforums.broadinstitute.org/discussion/3893/calling-variants-on-cohorts-of-samples-using-the-haplotypecaller-in-gvcf-mode).\n* When set to `both`, the app runs GATK HaplotypeCaller in gVCF mode, producing a gVCF file. Subsequently, it\nruns GATK GenotypeGVCFs to genotype the gVCF into a regular VCF.\n\n## How does this app work?\n\nThis app performs the following steps:\n\n- Detects and downloads the GATK3 jar file from your project.\n- Fetches your BAM input file and detects the human reference genome used.\n- Based on the detected human genome, and on your choice of vendor exome kit, fetches additional data resources.\n- Runs Picard MarkDuplicates to mark duplicates (unless configured to skip this step).\n- Runs GATK RealignerTargetCreator and GATK IndelRealigner to realign indels.\n- Runs GATK BaseRecalibrator and GATK PrintReads to recalibrate base quality scores.\n- Runs GATK HaplotypeCaller (in VCF or gVCF mode) and optionally GATK GenotypeGVCFs.\n\nThe HaplotypeCaller step is performed only within target coordinates (with added padding), if a vendor exome kit is chosen.\n",
  "details": {
    "whatsNew": "* 1.0.5: Markdown fix in documentation\n* 1.0.4: GATK .jar file is now a required input. Allowing the applet to work with any version of GATK3.x, including GATK3.6.\n* 1.0.3: Adding Agilent SureSelect Human All Exon v6\n* 1.0.2: Bug fixes\n* 1.0.1: Adding explicit tabix indexing for older GATK versions"
  },
  "categories": [
    "Variation Calling",
    "Pipelines"
  ],
  "access": {
    "project": "VIEW"
  }
}
